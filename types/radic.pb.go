// Code generated by protoc-gen-go. DO NOT EDIT.
// source: radic.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Keyword struct {
	Field                string   `protobuf:"bytes,1,opt,name=Field,proto3" json:"Field,omitempty"`
	Word                 string   `protobuf:"bytes,2,opt,name=Word,proto3" json:"Word,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keyword) Reset()         { *m = Keyword{} }
func (m *Keyword) String() string { return proto.CompactTextString(m) }
func (*Keyword) ProtoMessage()    {}
func (*Keyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_b20a823ad16093a3, []int{0}
}

func (m *Keyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyword.Unmarshal(m, b)
}
func (m *Keyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyword.Marshal(b, m, deterministic)
}
func (m *Keyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyword.Merge(m, src)
}
func (m *Keyword) XXX_Size() int {
	return xxx_messageInfo_Keyword.Size(m)
}
func (m *Keyword) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyword.DiscardUnknown(m)
}

var xxx_messageInfo_Keyword proto.InternalMessageInfo

func (m *Keyword) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *Keyword) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

type SearchRequest struct {
	//*
	//Not优先级最高，Must和Should需要同时满足，Must和Should至少有一个不能为空
	Must                 []*Keyword      `protobuf:"bytes,1,rep,name=Must,proto3" json:"Must,omitempty"`
	Should               []*Keyword      `protobuf:"bytes,2,rep,name=Should,proto3" json:"Should,omitempty"`
	Not                  []*Keyword      `protobuf:"bytes,3,rep,name=Not,proto3" json:"Not,omitempty"`
	OutputOffset         int32           `protobuf:"varint,4,opt,name=OutputOffset,proto3" json:"OutputOffset,omitempty"`
	Orderless            bool            `protobuf:"varint,5,opt,name=Orderless,proto3" json:"Orderless,omitempty"`
	CountDocsOnly        bool            `protobuf:"varint,6,opt,name=CountDocsOnly,proto3" json:"CountDocsOnly,omitempty"`
	Timeout              int32           `protobuf:"varint,7,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	FilterIds            map[uint32]bool `protobuf:"bytes,8,rep,name=FilterIds,proto3" json:"FilterIds,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	OnFlag               uint32          `protobuf:"varint,9,opt,name=OnFlag,proto3" json:"OnFlag,omitempty"`
	OffFlag              uint32          `protobuf:"varint,10,opt,name=OffFlag,proto3" json:"OffFlag,omitempty"`
	RequestType          int32           `protobuf:"varint,11,opt,name=RequestType,proto3" json:"RequestType,omitempty"`
	OrFlags              []uint32        `protobuf:"varint,12,rep,packed,name=OrFlags,proto3" json:"OrFlags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b20a823ad16093a3, []int{1}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetMust() []*Keyword {
	if m != nil {
		return m.Must
	}
	return nil
}

func (m *SearchRequest) GetShould() []*Keyword {
	if m != nil {
		return m.Should
	}
	return nil
}

func (m *SearchRequest) GetNot() []*Keyword {
	if m != nil {
		return m.Not
	}
	return nil
}

func (m *SearchRequest) GetOutputOffset() int32 {
	if m != nil {
		return m.OutputOffset
	}
	return 0
}

func (m *SearchRequest) GetOrderless() bool {
	if m != nil {
		return m.Orderless
	}
	return false
}

func (m *SearchRequest) GetCountDocsOnly() bool {
	if m != nil {
		return m.CountDocsOnly
	}
	return false
}

func (m *SearchRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *SearchRequest) GetFilterIds() map[uint32]bool {
	if m != nil {
		return m.FilterIds
	}
	return nil
}

func (m *SearchRequest) GetOnFlag() uint32 {
	if m != nil {
		return m.OnFlag
	}
	return 0
}

func (m *SearchRequest) GetOffFlag() uint32 {
	if m != nil {
		return m.OffFlag
	}
	return 0
}

func (m *SearchRequest) GetRequestType() int32 {
	if m != nil {
		return m.RequestType
	}
	return 0
}

func (m *SearchRequest) GetOrFlags() []uint32 {
	if m != nil {
		return m.OrFlags
	}
	return nil
}

type SearchResp struct {
	Docs                 [][]byte `protobuf:"bytes,1,rep,name=Docs,proto3" json:"Docs,omitempty"`
	Total                int32    `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	Timeout              bool     `protobuf:"varint,3,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchResp) Reset()         { *m = SearchResp{} }
func (m *SearchResp) String() string { return proto.CompactTextString(m) }
func (*SearchResp) ProtoMessage()    {}
func (*SearchResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_b20a823ad16093a3, []int{2}
}

func (m *SearchResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResp.Unmarshal(m, b)
}
func (m *SearchResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResp.Marshal(b, m, deterministic)
}
func (m *SearchResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResp.Merge(m, src)
}
func (m *SearchResp) XXX_Size() int {
	return xxx_messageInfo_SearchResp.Size(m)
}
func (m *SearchResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResp.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResp proto.InternalMessageInfo

func (m *SearchResp) GetDocs() [][]byte {
	if m != nil {
		return m.Docs
	}
	return nil
}

func (m *SearchResp) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *SearchResp) GetTimeout() bool {
	if m != nil {
		return m.Timeout
	}
	return false
}

func init() {
	proto.RegisterType((*Keyword)(nil), "types.Keyword")
	proto.RegisterType((*SearchRequest)(nil), "types.SearchRequest")
	proto.RegisterMapType((map[uint32]bool)(nil), "types.SearchRequest.FilterIdsEntry")
	proto.RegisterType((*SearchResp)(nil), "types.SearchResp")
}

func init() { proto.RegisterFile("radic.proto", fileDescriptor_b20a823ad16093a3) }

var fileDescriptor_b20a823ad16093a3 = []byte{
	// 385 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0x4d, 0x8b, 0xd4, 0x40,
	0x10, 0x25, 0x9b, 0x49, 0x66, 0x52, 0x99, 0x2c, 0xd2, 0x88, 0x34, 0xe2, 0xa1, 0x89, 0x22, 0x39,
	0xe5, 0xe0, 0x5e, 0x44, 0xbc, 0x88, 0x3a, 0x20, 0xa2, 0x91, 0xde, 0x01, 0xcf, 0x71, 0xd2, 0x71,
	0x83, 0x6d, 0x3a, 0xf6, 0x87, 0x92, 0x3f, 0xed, 0x6f, 0x90, 0xae, 0x24, 0xee, 0x04, 0xe6, 0x56,
	0xaf, 0xea, 0xbd, 0xd7, 0xd5, 0x55, 0x05, 0xa9, 0xae, 0x9b, 0xee, 0x54, 0x0e, 0x5a, 0x59, 0x45,
	0x22, 0x3b, 0x0e, 0xc2, 0xe4, 0x37, 0xb0, 0xfd, 0x28, 0xc6, 0x3f, 0x4a, 0x37, 0xe4, 0x21, 0x44,
	0x87, 0x4e, 0xc8, 0x86, 0x06, 0x2c, 0x28, 0x12, 0x3e, 0x01, 0x42, 0x60, 0xf3, 0x55, 0xe9, 0x86,
	0x5e, 0x61, 0x12, 0xe3, 0xfc, 0x6f, 0x08, 0xd9, 0xad, 0xa8, 0xf5, 0xe9, 0x8e, 0x8b, 0x5f, 0x4e,
	0x18, 0x4b, 0x72, 0xd8, 0x7c, 0x72, 0xc6, 0xd2, 0x80, 0x85, 0x45, 0xfa, 0xe2, 0xba, 0x44, 0xf3,
	0x72, 0x76, 0xe6, 0x58, 0x23, 0xcf, 0x21, 0xbe, 0xbd, 0x53, 0x4e, 0x7a, 0xaf, 0x4b, 0xac, 0xb9,
	0x4a, 0x18, 0x84, 0x9f, 0x95, 0xa5, 0xe1, 0x45, 0x92, 0x2f, 0x91, 0x1c, 0xf6, 0x95, 0xb3, 0x83,
	0xb3, 0x55, 0xdb, 0x1a, 0x61, 0xe9, 0x86, 0x05, 0x45, 0xc4, 0x57, 0x39, 0xf2, 0x04, 0x92, 0x4a,
	0x37, 0x42, 0x4b, 0x61, 0x0c, 0x8d, 0x58, 0x50, 0xec, 0xf8, 0x7d, 0x82, 0x3c, 0x83, 0xec, 0xad,
	0x72, 0xbd, 0x7d, 0xa7, 0x4e, 0xa6, 0xea, 0xe5, 0x48, 0x63, 0x64, 0xac, 0x93, 0x84, 0xc2, 0xf6,
	0xd8, 0xfd, 0x14, 0xca, 0x59, 0xba, 0xc5, 0x27, 0x16, 0x48, 0xde, 0x40, 0x72, 0xe8, 0xa4, 0x15,
	0xfa, 0x43, 0x63, 0xe8, 0x0e, 0x3b, 0x7d, 0x3a, 0x77, 0xba, 0x1a, 0x4c, 0xf9, 0x9f, 0xf5, 0xbe,
	0xb7, 0x7a, 0xe4, 0xf7, 0x2a, 0xf2, 0x08, 0xe2, 0xaa, 0x3f, 0xc8, 0xfa, 0x3b, 0x4d, 0x58, 0x50,
	0x64, 0x7c, 0x46, 0xfe, 0xd1, 0xaa, 0x6d, 0xb1, 0x00, 0x58, 0x58, 0x20, 0x61, 0x90, 0xce, 0xb6,
	0xc7, 0x71, 0x10, 0x34, 0xc5, 0x96, 0xce, 0x53, 0xa8, 0xd5, 0x9e, 0x6b, 0xe8, 0x9e, 0x85, 0xa8,
	0x9d, 0xe0, 0xe3, 0xd7, 0x70, 0xbd, 0x6e, 0x85, 0x3c, 0x80, 0xf0, 0x87, 0x18, 0x71, 0xd9, 0x19,
	0xf7, 0xa1, 0x3f, 0x80, 0xdf, 0xb5, 0x74, 0x02, 0x77, 0xbd, 0xe3, 0x13, 0x78, 0x75, 0xf5, 0x32,
	0xc8, 0xbf, 0x00, 0x2c, 0xdf, 0x32, 0x83, 0x3f, 0x09, 0x3f, 0x22, 0x5c, 0xf6, 0x9e, 0x63, 0xec,
	0xb5, 0x47, 0x65, 0x6b, 0x89, 0xda, 0x88, 0x4f, 0xe0, 0x7c, 0x80, 0x21, 0x7a, 0x2e, 0xf0, 0x5b,
	0x8c, 0x57, 0x78, 0xf3, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x15, 0x6d, 0xd7, 0x0d, 0x94, 0x02, 0x00,
	0x00,
}
